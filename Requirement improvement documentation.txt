Animal Match Game

This is Animal Match Game.

Problem analysis (Requirements):
1.Program need to display 8 unique animals pairs from the list.
2.Program need to allow user to find same animals,
3.Program need to keep track of how much animals pairs player find,
4.Program need to keep track of total time player spend trying to find animals pair
5.Program need to allow user to play again.


***************  Make a game better requirements *****************

Improvement no 1 - Random animals pair
In a current Animals mathing Game we need to add different animals Emoji pairs so the same ones 
don’t show up each time. 

Key requirements:
	1. In the begining of every new game program need do display random animals (random animals pairs);
	2. We have 16 field (means 8 animal pairs),
	3. We need more then 8 animals pairs in total.

Program need to store n-th animals Emoji in the List.

Program need to randomly display 8 animals pairs.

Improvement number 2 - End game message

This is a improvement of step 2.

Requirement: 1.Program need to ask player to play again after the game is finished.
	     2.Program need to pop up new window with a text: "Do you want to play again" and two actions buttons "Yes" and "No".  
	     2.1.If user press "Yes" then game starts again.
             2.2.If user press "No" then a game don't start again and program display last game state.
	     2.2.1.Last game state need to include new button "Play again". That button need to exist only when player finish the game and decide to not play again (He press "No button from a new window").	


Improvement number 2 - Keep track of the player best time

Idea is that our game have a feature to keep track of player best time and display best time every time when player start a new game.
For example, Player play the game and complete the game for some period of time (name that time for example current time).
That time can be slower or faster then best time. If current time is slower then best time then user need to get message "Come on man you can do much better!!!!". 
Else, if current time is faster then best time, then player need to get message like "Oh man, you are faster then thunderbolt".

Problem analysis (Requirements):
1.Program need to be able to know when player play the game for the first time 
	For example, when player play the game for the first time that time is his best time. Every other time when player play the game that is current time.
2.Program need to make decision about new best time.
	For example, program need to make evaluation between current time and best time in the terms of slower and faster.
	If current time is faster then best time then current time need to become the best time.
	Else, if current time is slower then best time, then the best time is steal the best time.
3.Program need to be able to store somewhere best time and access that value for comparing with current time.
4.Program need to be able to, based on evaluation to display predefined message:
	If current time is slower then best time then user need to get message "Come on man you can do much better!!!!". 
	Else, if current time is faster then best time, then player need to get message like "Oh man, you are faster then thunderbolt".
5.Program need to be able to every time when player finish the game to display if following order: current time, best time (current time and a best time need to be in the same format) and the message as a result of evaluation.

Improvement 3 - Game modes

This feature should allow player to before the game has been started choose in with mode he want to play. 
For this feature we need a two modes: "Classic mode" - where players can see all animals, and an "Advanced Mode" - where animals are hidden until a match is attempted.

Problem analysis (Requirements):
1.When player load a game program need to pop up modal with question in witch mode player want to play: "Classic mode" - where player can see all animals, and or "Advanced Mode" - where animals are hidden until a match is attempted,
2.If player choose to play in a "Classic mode" then game logic can remain the same like now,
3.If player choose to play in a "Advanced mode" then game logic needs to adjusted with the following requirements:
	1. Initial Hidden State: All animal icons are hidden initially, represented by a placeholder like a question mark (❓).
	2. Player click on the first squere: When the player clicks a button, the animal behind that button is temporarily revealed.
	3. Player click on the second squere: When the player clicks another button, the animal behind that button is revealed and the program compares it with the 	  previously revealed animal. Program not allow to user to click any other squere before program finishes evaluation. If the animals are the same, proceed 	   to step 4. If the animals are not the same, proceed to step 5.
	4. Matched Animals Disappear: Once a match is found, those animals disappear from the screen - This can be achieved by removing the matched animals from 
           the list or marking them as matched and updating the UI accordingly.
	5. Animals Returns to Previous State: If the animals are not the same we can identify two possible scenarios:
	6. Timer and Score Display: The timer and match count should be displayed as in the classic mode.
4.Program need to can keep track of two player best time: one for the "Classic mode" second for the "Advanced mode". Logic for the keep track of player best time need to remain the same.
5.Program need to display different player best time in UI. If user select "Classic mode" then program need to display in UI best time achieved in "Classic mode". If player select a "Advanced Mode" then program need to display in UI best time achieved in "Advanced mode".

Improvement 4 - End of the Game
This is improvement of end of the game options. Player should be able to, when he finish the game, to choose to repeat the game in the same mode or to switch to second mode or to exist the game.

Problem analysis (Requirements):
1.When a player finish a game program need to display a modal with following structure:
	1.Repeat a game (this is a button) - that means that player wants to play again and he wants to play again in a current mode
		This means that game needs to stay in a current mode.
	2.Switch mode (this is button) - that means that player wants to play again but in the second mode
		This means that in that case game need to switch in other mode.
	3.Exit (this is button) - that means that player doesn't want to play again
		We will work on this in a next improvement.
	4.Player current time (text) - this is a time achieved from his last game,
	5.Player best time (text) - this is player best time,
	6.Apropriate message (text) - this is already developed

Design ideas:
1.We need to have a different method for set up game based on classic or advanced modes.

Improvement 4 - End of the game exit button


